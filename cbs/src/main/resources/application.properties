# props
server.port=8080

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=root

# Show log for each sql query
spring.jpa.show-sql=true
spring.sql.init.mode=always

#spring.rabbitmq.host=localhost
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.mvc.throwExceptionIfNoHandlerFound=true

# account queue - only inserts - payload is acc can be fanout
#[multiple systems might need to get notified when new account is created]
# FO: no need for keys
accounts.exchange.name=accounts.exchange.fan_out
accounts.one.queue.name=accounts.queue_1
accounts.two.queue.name=accounts.queue_2
#accounts.routingKey=accounts.routing_key

# bal queue - [inserts and updates] DE based on operation
# - payload is bal - messaging will be in business layer
balances.exchange.name=balances.exchange
balances.create.queue.name=balances.create.queue
balances.update.queue.name=balances.update.queue
balances.create.routingKey=create
balances.update.routingKey=update

# trx queue - only inserts - [credits and debit queues]
# DE based on trxType - payload is trx
trx.exchange.name=transactions.exchange  
trx.credit.queue.name=trx.credit.queue
trx.debit.queue.name=trx.debit.queue
trx.credit.routingKey=IN
trx.debit.routingKey=OUT

spring.main.allow-bean-definition-overriding=true